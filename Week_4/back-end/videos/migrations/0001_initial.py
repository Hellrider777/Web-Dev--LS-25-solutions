# Generated by Django 5.1.5 on 2025-07-06 11:32

import django.db.models.deletion
import videos.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('privacy', models.CharField(choices=[('public', 'Public'), ('unlisted', 'Unlisted'), ('private', 'Private')], default='public', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('video_file', models.FileField(blank=True, null=True, upload_to=videos.models.video_upload_path)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=videos.models.thumbnail_upload_path)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('video_quality', models.CharField(default='720p', max_length=20)),
                ('tags', models.TextField(blank=True, help_text='Comma-separated tags')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('private', 'Private'), ('unlisted', 'Unlisted')], default='published', max_length=20)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('dislikes_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('video_url', models.URLField(blank=True, help_text='External video URL if not uploading file')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='videos.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_videos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlaylistVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.playlist')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.video')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='playlist',
            name='videos',
            field=models.ManyToManyField(blank=True, through='videos.PlaylistVideo', to='videos.video'),
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_type', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='videos.video')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_edited', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='videos.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='videos.video')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VideoView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('watch_duration', models.DurationField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_views', to='videos.video')),
            ],
        ),
        migrations.CreateModel(
            name='WatchLater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.video')),
            ],
            options={
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to=settings.AUTH_USER_MODEL)),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['subscriber', '-subscribed_at'], name='videos_subs_subscri_17b475_idx'), models.Index(fields=['channel', '-subscribed_at'], name='videos_subs_channel_64de2d_idx')],
                'unique_together': {('subscriber', 'channel')},
            },
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['status', '-created_at'], name='videos_vide_status_9ed8a1_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['category', '-created_at'], name='videos_vide_categor_da8a06_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['user', '-created_at'], name='videos_vide_user_id_260722_idx'),
        ),
        migrations.AddIndex(
            model_name='playlistvideo',
            index=models.Index(fields=['playlist', 'order'], name='videos_play_playlis_b414b2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='playlistvideo',
            unique_together={('playlist', 'video')},
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['user', '-updated_at'], name='videos_play_user_id_1187a7_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['video', 'like_type'], name='videos_like_video_i_075cb7_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['user', '-created_at'], name='videos_like_user_id_0cec07_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('user', 'video')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['video', '-created_at'], name='videos_comm_video_i_7f5122_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user', '-created_at'], name='videos_comm_user_id_e75ad6_idx'),
        ),
        migrations.AddIndex(
            model_name='videoview',
            index=models.Index(fields=['video', '-viewed_at'], name='videos_vide_video_i_b6d345_idx'),
        ),
        migrations.AddIndex(
            model_name='videoview',
            index=models.Index(fields=['user', '-viewed_at'], name='videos_vide_user_id_db86d7_idx'),
        ),
        migrations.AddIndex(
            model_name='watchlater',
            index=models.Index(fields=['user', '-added_at'], name='videos_watc_user_id_a9d232_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='watchlater',
            unique_together={('user', 'video')},
        ),
    ]
