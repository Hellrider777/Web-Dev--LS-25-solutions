{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krsna\\\\OneDrive\\\\Desktop\\\\Web-Dev--LS-25-solutions\\\\Week_4\\\\front-end\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport VideoCard from '../components/VideoCard';\nimport { videos } from '../data/dummyVideos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [allVideos, setAllVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n  const fetchVideos = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:8000/api/videos/');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // If we got videos from API, use them; otherwise fallback to dummy data\n      if (data.results && data.results.length > 0) {\n        setAllVideos(data.results);\n      } else {\n        console.log('No videos from API, using dummy data');\n        setAllVideos(videos);\n      }\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching videos:', err);\n      setError('Failed to load videos from server, showing sample videos');\n      // Fallback to dummy data on error\n      setAllVideos(videos);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleWatchLaterToggle = (videoId, isAdded) => {\n    // Dispatch custom event to update navbar count\n    window.dispatchEvent(new Event('watchLaterUpdated'));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading videos...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recommended Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discover amazing content from creators around the world\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#ff6b6b',\n            fontSize: '0.9rem'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: allVideos.map(video => /*#__PURE__*/_jsxDEV(VideoCard, {\n        video: video,\n        onWatchLaterToggle: handleWatchLaterToggle\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"MGpdya2Ql7F1QrA1DfMqPrTlQN0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","VideoCard","videos","jsxDEV","_jsxDEV","Home","_s","allVideos","setAllVideos","loading","setLoading","error","setError","fetchVideos","response","fetch","ok","Error","status","data","json","results","length","console","log","err","handleWatchLaterToggle","videoId","isAdded","window","dispatchEvent","Event","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontSize","map","video","onWatchLaterToggle","id","_c","$RefreshReg$"],"sources":["C:/Users/krsna/OneDrive/Desktop/Web-Dev--LS-25-solutions/Week_4/front-end/src/pages/Home.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport VideoCard from '../components/VideoCard';\r\nimport { videos } from '../data/dummyVideos';\r\n\r\nconst Home = () => {\r\n  const [allVideos, setAllVideos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  const fetchVideos = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('http://localhost:8000/api/videos/');\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      // If we got videos from API, use them; otherwise fallback to dummy data\r\n      if (data.results && data.results.length > 0) {\r\n        setAllVideos(data.results);\r\n      } else {\r\n        console.log('No videos from API, using dummy data');\r\n        setAllVideos(videos);\r\n      }\r\n      \r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error fetching videos:', err);\r\n      setError('Failed to load videos from server, showing sample videos');\r\n      // Fallback to dummy data on error\r\n      setAllVideos(videos);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWatchLaterToggle = (videoId, isAdded) => {\r\n    // Dispatch custom event to update navbar count\r\n    window.dispatchEvent(new Event('watchLaterUpdated'));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"home-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading videos...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"page-header\">\r\n        <h1>Recommended Videos</h1>\r\n        <p>Discover amazing content from creators around the world</p>\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            <p style={{ color: '#ff6b6b', fontSize: '0.9rem' }}>\r\n              {error}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"video-grid\">\r\n        {allVideos.map(video => (\r\n          <VideoCard \r\n            key={video.id} \r\n            video={video} \r\n            onWatchLaterToggle={handleWatchLaterToggle}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}